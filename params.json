{"name":"式(Shiki) beta","body":"式(Shiki)はTwitter Botを作成するためのイベントドリブンモデルのフレームワークです。\r\n\r\n主な特徴\r\n-------------\r\n\r\n* イベントドリブンモデルの記法\r\n* Pupilとの統合によりTwitter APIをRubyライクな文法で呼び出しできます(Pupilとは式のために作られたTwitter APIラッパーのこと)\r\n* 札(Fuda)プラグインを追加することで機能拡張ができます\r\n\r\n必要なもの\r\n-------------\r\n\r\n* pupil, json, oauth gem\r\n* Ruby 1.9.x\r\n\r\n導入方法\r\n-------------\r\n\r\n\tgem install shiki\r\n\r\nサンプル\r\n-------------\r\n頻繁にリプライを送ってくる迷惑ユーザーに苦言を呈するBotの例(メリーさんBot)\r\n\r\n\trequire \"shiki\"\r\n\r\n\tOAUTH_KEY = {\r\n\t\t:consumer_key => \"something\",   \t# Required\r\n\t\t:consumer_secret => \"something\"\t\t# Required\r\n\t\t:access_token => \"something\",       # Required\r\n\t\t:access_token_secret => \"something\" # Required\r\n\t}\r\n\t\r\n\tclass Merry < Shiki::Base # クラス全体でひとつのBotとして抽象化する\r\n      set :oauth_key, OAUTH_KEY\r\n      \r\n      use :memory, :on => \"databases/memory/memory.db\" # Memory.rb Plug-in\r\n      \r\n      event :mention do |status|\r\n        user = memory.remember :person => status.user # Memoryからユーザーを呼び出し\r\n        if user.replied_average_time < 40 # 平均リプライ頻度が40秒以内の時\r\n          status.user.reply(\"頻繁にリプ飛ばしてくるの、正直鬱陶しいんです。やめてください\")\r\n        end\r\n      end\r\n    end\r\n\r\n\tmerry = Merry.new\r\n \tmerry.run\r\n \t\r\n自動でフォロー返ししつつ挨拶も送る気さくなBotの例(おおあめさんBot)\r\n\r\n\trequire \"shiki\"\r\n\r\n\tOAUTH_KEY = {\r\n\t\t:consumer_key => \"something\",   \t# Required\r\n\t\t:consumer_secret => \"something\"\t\t# Required\r\n\t\t:access_token => \"something\",       # Required\r\n\t\t:access_token_secret => \"something\" # Required\r\n\t}\r\n\t\r\n\tclass Oame < Shiki::Base\r\n      set :oauth_key, OAUTH_KEY\r\n      \r\n      event :follow do |user|\r\n      \tuser.follow\r\n      \tuser.reply(\"フォローありがと！#{user.name}って呼べばいいのかしら？よろしくね！\")\r\n      end\r\n    end\r\n\r\n\toame = Oame.new\r\n \toame.run\r\n \t\r\nリプライをオウム返しするBotの例(響子さんBot)\r\n\r\n\trequire \"shiki\"\r\n\r\n\tOAUTH_KEY = {\r\n\t\t:consumer_key => \"something\",   \t# Required\r\n\t\t:consumer_secret => \"something\"\t\t# Required\r\n\t\t:access_token => \"something\",       # Required\r\n\t\t:access_token_secret => \"something\" # Required\r\n\t}\r\n\t\r\n\tclass Kyoko < Shiki::Base\r\n      set :oauth_key, OAUTH_KEY\r\n      \r\n      event :mention do |status|\r\n      \tif status.text =~ /いちたすいちはー/\r\n      \t  status.user.reply(\"・・・\") # 算数は苦手\r\n      \telse\r\n      \t  status.user.reply(status.text) # 山彦なので\r\n      \tend\r\n      end\r\n    end\r\n\r\n\tkyoko = Kyoko.new\r\n \tkyoko.run\r\n\r\nCredits\r\n-------------\r\n\r\nDeveloper: [Oame](http://twitter.com/o_ame)\r\n\r\nLicense\r\n-------------\r\n\r\nCopyright (c) 2011 Oame. See LICENSE.txt for\r\nfurther details.\r\n","tagline":"The \"Unidentified\" Bot Framework for Twitter, written in Ruby.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}